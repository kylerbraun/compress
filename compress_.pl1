compress_: procedure(source, destination, bit_count)
	     returns(fixed binary(24));

declare source(*) bit(9);
declare destination bit(*);
declare bit_count fixed binary(24);

declare encode_ entry(dimension(*) bit(9), bit(*),
		      dimension(0:511) bit(20) varying, fixed binary(24));
declare make_code_ entry(dimension(*) bit(9), dimension(0:511) fixed binary(9),
			 dimension(0:511) bit(20) varying);
declare write_header_ entry(bit(*), dimension(0:511) fixed binary(9),
			    dimension(0:511) bit(20) varying, fixed binary(4))
			returns(fixed binary(24));

declare codes(0:511) bit(20) varying;
declare order(0:511) fixed binary(9);
declare used fixed binary(24);

call make_code_(source, order, codes);
used = write_header_(destination, order, codes, mod(bit_count, 9));
call encode_(source, destination, codes, used);

return(used);

end compress_;
